import random
import string

def get_char_pool(use_upper, use_lower, use_digits, use_symbols):
    pool = ""
    if use_upper:
        pool += string.ascii_uppercase
    if use_lower:
        pool += string.ascii_lowercase
    if use_digits:
        pool += string.digits
    if use_symbols:
        pool += string.punctuation
    return pool

def generate_password(length, pool):
    return "".join(random.choice(pool) for _ in range(length))

def save_password(password):
    with open("generated_passwords.txt", "a") as f:
        f.write(password + "\n")

def main():
    print("=== Advanced Password Generator ===")
    
    while True:
        try:
            length = int(input("Enter password length (8-32): "))
            if length < 8 or length > 32:
                print("Length must be between 8 and 32.")
                continue
        except ValueError:
            print("Enter a valid number.")
            continue

        print("Include character types:")
        use_upper = input("Include uppercase letters? (y/n): ").lower() == "y"
        use_lower = input("Include lowercase letters? (y/n): ").lower() == "y"
        use_digits = input("Include digits? (y/n): ").lower() == "y"
        use_symbols = input("Include symbols? (y/n): ").lower() == "y"

        pool = get_char_pool(use_upper, use_lower, use_digits, use_symbols)
        if not pool:
            print("You must select at least one character type.\n")
            continue

        try:
            count = int(input("How many passwords to generate? "))
            if count < 1:
                print("Enter a positive number.\n")
                continue
        except ValueError:
            print("Enter a valid number.\n")
            continue

        print("\nGenerated Passwords:")
        for _ in range(count):
            password = generate_password(length, pool)
            print(password)
            save_password(password)

        again = input("\nGenerate more passwords? (y/n): ").lower()
        if again != "y":
            print("All passwords saved in 'generated_passwords.txt'. Goodbye!")
            break

if __name__ == "__main__":
    main()
