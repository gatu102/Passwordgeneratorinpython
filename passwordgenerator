import tkinter as tk
from tkinter import messagebox, filedialog
import random
import string

try:
    import pyperclip
    clipboard_available = True
except ImportError:
    clipboard_available = False

AMBIGUOUS = "O0l1I"

def evaluate_strength(password):
    length = len(password)
    categories = sum([
        any(c.islower() for c in password),
        any(c.isupper() for c in password),
        any(c.isdigit() for c in password),
        any(c in string.punctuation for c in password)
    ])
    
    if length >= 12 and categories >= 3:
        return "Strong"
    elif length >= 10 and categories >= 2:
        return "Moderate"
    else:
        return "Weak"

def get_color(strength):
    if strength == "Strong":
        return "green"
    elif strength == "Moderate":
        return "orange"
    else:
        return "red"

def generate_passwords():
    try:
        length = int(length_entry.get())
        count = int(count_entry.get())
        if length < 8 or length > 32 or count < 1:
            messagebox.showerror("Error", "Length 8-32, Count >=1")
            return
    except ValueError:
        messagebox.showerror("Error", "Enter valid numbers")
        return
    
    chars = ""
    if upper_var.get(): chars += string.ascii_uppercase
    if lower_var.get(): chars += string.ascii_lowercase
    if digits_var.get(): chars += string.digits
    if symbols_var.get(): chars += string.punctuation
    
    if exclude_var.get():
        chars = ''.join(c for c in chars if c not in AMBIGUOUS)
    
    if not chars:
        messagebox.showerror("Error", "Select at least one character type!")
        return
    
    for _ in range(count):
        password = "".join(random.choice(chars) for _ in range(length))
        strength = evaluate_strength(password)
        password_list.insert(tk.END, password)
        password_list.itemconfig(tk.END, {'fg': get_color(strength)})
    
    if clipboard_available:
        pyperclip.copy(password_list.get(tk.END))

def generate_strong_password():
    length_entry.delete(0, tk.END)
    length_entry.insert(0, "16")
    upper_var.set(True)
    lower_var.set(True)
    digits_var.set(True)
    symbols_var.set(True)
    exclude_var.set(True)
    count_entry.delete(0, tk.END)
    count_entry.insert(0, "1")
    generate_passwords()

def copy_selected():
    if password_list.curselection():
        password = password_list.get(password_list.curselection())
        if clipboard_available:
            pyperclip.copy(password)
            messagebox.showinfo("Copied", "Password copied to clipboard!")
        else:
            messagebox.showinfo("Clipboard Unavailable", "Install pyperclip for clipboard functionality.")

def save_to_file():
    if password_list.size() == 0:
        messagebox.showwarning("Warning", "No passwords to save!")
        return
    file_path = filedialog.asksaveasfilename(defaultextension=".txt",
                                             filetypes=[("Text files", "*.txt")])
    if file_path:
        with open(file_path, "w") as f:
            for i in range(password_list.size()):
                f.write(password_list.get(i) + "\n")
        messagebox.showinfo("Saved", f"Passwords saved to {file_path}")

# GUI Setup
root = tk.Tk()
root.title("Professional Password Generator & Manager")
root.geometry("600x500")
root.resizable(False, False)

tk.Label(root, text="Password Length (8-32):").pack(pady=2)
length_entry = tk.Entry(root)
length_entry.pack()
length_entry.insert(0, "12")

tk.Label(root, text="Number of Passwords:").pack(pady=2)
count_entry = tk.Entry(root)
count_entry.pack()
count_entry.insert(0, "1")

upper_var = tk.BooleanVar(value=True)
lower_var = tk.BooleanVar(value=True)
digits_var = tk.BooleanVar(value=True)
symbols_var = tk.BooleanVar(value=True)
exclude_var = tk.BooleanVar(value=False)

tk.Checkbutton(root, text="Include Uppercase", variable=upper_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Lowercase", variable=lower_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Digits", variable=digits_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Symbols", variable=symbols_var).pack(anchor='w')
tk.Checkbutton(root, text="Exclude Ambiguous Characters (O0l1I)", variable=exclude_var).pack(anchor='w')

tk.Button(root, text="Generate Password(s)", command=generate_passwords).pack(pady=5)
tk.Button(root, text="Generate Strong Password (Recommended)", command=generate_strong_password).pack(pady=5)

password_list = tk.Listbox(root, width=70, height=15)
password_list.pack(pady=5)

tk.Button(root, text="Copy Selected to Clipboard", command=copy_selected).pack(pady=3)
tk.Button(root, text="Save All Passwords to File", command=save_to_file).pack(pady=3)

root.mainloop()
