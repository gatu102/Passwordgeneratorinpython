import tkinter as tk
from tkinter import messagebox, filedialog
import random, string

try:
    import pyperclip
except ImportError:
    pyperclip = None

AMBIGUOUS = "O0l1I"

def evaluate_strength(pw):
    length, cats = len(pw), sum(map(bool, [
        any(c.islower() for c in pw),
        any(c.isupper() for c in pw),
        any(c.isdigit() for c in pw),
        any(c in string.punctuation for c in pw)
    ]))
    return "Strong" if length >= 12 and cats >= 3 else "Moderate" if length >= 10 and cats >= 2 else "Weak"

def get_color(strength):
    return {"Strong": "green", "Moderate": "orange"}.get(strength, "red")

def generate_passwords():
    try:
        length, count = int(length_entry.get()), int(count_entry.get())
        if not (8 <= length <= 32 and count >= 1):
            raise ValueError
    except ValueError:
        return messagebox.showerror("Error", "Length 8–32, Count ≥1")
    
    chars = ''.join([
        string.ascii_uppercase if upper_var.get() else '',
        string.ascii_lowercase if lower_var.get() else '',
        string.digits if digits_var.get() else '',
        string.punctuation if symbols_var.get() else ''
    ])
    if exclude_var.get():
        chars = ''.join(c for c in chars if c not in AMBIGUOUS)
    if not chars:
        return messagebox.showerror("Error", "Select at least one character type!")
    
    password_list.delete(0, tk.END)
    for _ in range(count):
        pw = ''.join(random.choice(chars) for _ in range(length))
        color = get_color(evaluate_strength(pw))
        password_list.insert(tk.END, pw)
        password_list.itemconfig(tk.END, fg=color)
    
    if pyperclip:
        pyperclip.copy(password_list.get(tk.END))

def generate_strong_password():
    length_entry.delete(0, tk.END); length_entry.insert(0, "16")
    for var in (upper_var, lower_var, digits_var, symbols_var, exclude_var): var.set(True)
    count_entry.delete(0, tk.END); count_entry.insert(0, "1")
    generate_passwords()

def copy_selected():
    if password_list.curselection():
        pw = password_list.get(password_list.curselection())
        if pyperclip:
            pyperclip.copy(pw)
            messagebox.showinfo("Copied", "Password copied!")
        else:
            messagebox.showinfo("Clipboard Unavailable", "Install pyperclip to enable copy.")

def save_to_file():
    if not password_list.size():
        return messagebox.showwarning("Warning", "No passwords to save!")
    path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text Files", "*.txt")])
    if path:
        with open(path, "w") as f:
            f.writelines(pw + "\n" for pw in password_list.get(0, tk.END))
        messagebox.showinfo("Saved", f"Passwords saved to {path}")

# GUI Setup
root = tk.Tk()
root.title("Password Generator & Manager")
root.geometry("600x500")
root.resizable(False, False)

def labeled_entry(label, default=""):
    tk.Label(root, text=label).pack(pady=2)
    e = tk.Entry(root); e.pack(); e.insert(0, default); return e

length_entry = labeled_entry("Password Length (8–32):", "12")
count_entry = labeled_entry("Number of Passwords:", "1")

upper_var, lower_var, digits_var, symbols_var, exclude_var = [tk.BooleanVar(value=v) for v in (1,1,1,1,0)]
for text, var in [
    ("Include Uppercase", upper_var), ("Include Lowercase", lower_var),
    ("Include Digits", digits_var), ("Include Symbols", symbols_var),
    ("Exclude Ambiguous (O0l1I)", exclude_var)
]:
    tk.Checkbutton(root, text=text, variable=var).pack(anchor='w')

tk.Button(root, text="Generate Password(s)", command=generate_passwords).pack(pady=5)
tk.Button(root, text="Generate Strong Password (Recommended)", command=generate_strong_password).pack(pady=5)

password_list = tk.Listbox(root, width=70, height=15); password_list.pack(pady=5)
tk.Button(root, text="Copy Selected", command=copy_selected).pack(pady=3)
tk.Button(root, text="Save All", command=save_to_file).pack(pady=3)

root.mainloop()
