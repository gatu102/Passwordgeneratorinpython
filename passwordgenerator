import tkinter as tk
from tkinter import messagebox
import random
import string

# Clipboard support
try:
    import pyperclip
    CLIPBOARD_AVAILABLE = True
except ImportError:
    CLIPBOARD_AVAILABLE = False

AMBIGUOUS = "O0l1I"

# ----------------- Password Evaluation ----------------- #
def evaluate_strength(password: str) -> str:
    """Evaluate password strength: Weak, Moderate, Strong."""
    length = len(password)
    categories = sum([
        any(c.islower() for c in password),
        any(c.isupper() for c in password),
        any(c.isdigit() for c in password),
        any(c in string.punctuation for c in password)
    ])
    
    if length >= 12 and categories >= 3:
        return "Strong"
    elif length >= 10 and categories >= 2:
        return "Moderate"
    else:
        return "Weak"

# ----------------- Password Generation ----------------- #
def generate_passwords():
    """Generate passwords based on user preferences."""
    try:
        length = int(length_entry.get())
        count = int(count_entry.get())
        if length < 8 or length > 32:
            raise ValueError("Length must be 8-32")
        if count < 1:
            raise ValueError("Count must be at least 1")
    except ValueError as e:
        messagebox.showerror("Error", f"Invalid input: {e}")
        return
    
    # Build character pool
    chars = ""
    if upper_var.get(): chars += string.ascii_uppercase
    if lower_var.get(): chars += string.ascii_lowercase
    if digits_var.get(): chars += string.digits
    if symbols_var.get(): chars += string.punctuation

    if exclude_var.get():
        chars = ''.join(c for c in chars if c not in AMBIGUOUS)

    if not chars:
        messagebox.showerror("Error", "Select at least one character type!")
        return

    password_list.delete(0, tk.END)
    for _ in range(count):
        password = "".join(random.choice(chars) for _ in range(length))
        password_list.insert(tk.END, f"{password}  ({evaluate_strength(password)})")
    
    # Copy first password automatically
    if CLIPBOARD_AVAILABLE and password_list.size() > 0:
        pyperclip.copy(password_list.get(0).split()[0])

def generate_strong_password():
    """Pre-configure options for a strong password and generate one."""
    length_entry.delete(0, tk.END)
    length_entry.insert(0, "16")
    upper_var.set(True)
    lower_var.set(True)
    digits_var.set(True)
    symbols_var.set(True)
    exclude_var.set(True)
    count_entry.delete(0, tk.END)
    count_entry.insert(0, "1")
    generate_passwords()

def copy_selected():
    """Copy selected password to clipboard."""
    if CLIPBOARD_AVAILABLE and password_list.curselection():
        selected = password_list.get(password_list.curselection()[0]).split()[0]
        pyperclip.copy(selected)
        messagebox.showinfo("Copied", "Password copied to clipboard!")
    elif not CLIPBOARD_AVAILABLE:
        messagebox.showwarning("Clipboard Not Available", "pyperclip module not installed.")

# ----------------- GUI Setup ----------------- #
root = tk.Tk()
root.title("Advanced Password Generator")
root.geometry("500x500")
root.resizable(False, False)

# Length and Count
tk.Label(root, text="Password Length (8-32):").pack(pady=2)
length_entry = tk.Entry(root)
length_entry.pack()
length_entry.insert(0, "12")

tk.Label(root, text="Number of Passwords:").pack(pady=2)
count_entry = tk.Entry(root)
count_entry.pack()
count_entry.insert(0, "1")

# Character options
upper_var = tk.BooleanVar(value=True)
lower_var = tk.BooleanVar(value=True)
digits_var = tk.BooleanVar(value=True)
symbols_var = tk.BooleanVar(value=True)
exclude_var = tk.BooleanVar(value=False)

tk.Checkbutton(root, text="Include Uppercase", variable=upper_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Lowercase", variable=lower_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Digits", variable=digits_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Symbols", variable=symbols_var).pack(anchor='w')
tk.Checkbutton(root, text="Exclude Ambiguous Characters (O0l1I)", variable=exclude_var).pack(anchor='w')

# Buttons
tk.Button(root, text="Generate Password(s)", command=generate_passwords).pack(pady=5)
tk.Button(root, text="Generate Strong Password (Recommended)", command=generate_strong_password).pack(pady=5)

# Password display
password_list = tk.Listbox(root, width=60)
password_list.pack(pady=5)

tk.Button(root, text="Copy Selected to Clipboard", command=copy_selected).pack(pady=5)

# Run
root.mainloop()
